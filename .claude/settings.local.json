{
  "permissions": {
    "allow": [
      "mcp__zen__consensus",
      "Bash(cargo check:*)",
      "Bash(rm:*)",
      "Bash(cargo run:*)",
      "mcp__zen__analyze",
      "Bash(cargo:*)",
      "mcp__zen__thinkdeep",
      "Bash(grep:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(timeout:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --package bingo-core --test fact_store_indexing_test test_join_conditions_with_shared_entity_id -- --nocapture)",
      "Bash(RUST_LOG=debug cargo test test_join_conditions_with_shared_entity_id -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test test_join_conditions_with_shared_entity_id --verbose)",
      "Bash(find:*)",
      "Bash(cloc:*)",
      "mcp__zen__planner",
      "Bash(rg:*)",
      "Bash(mkdir:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --release --test stream_processing_test test_session_windows -- --nocapture)",
      "Bash(sed:*)",
      "mcp__zen__chat",
      "Bash(rustc:*)",
      "Bash(awk:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(ast-grep:*)",
      "Bash(python3:*)",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__read_file",
      "mcp__zen__debug",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__directory_tree",
      "mcp__zen__codereview",
      "Bash(./test_debug)",
      "Bash(./target/release/deps/token_pool_performance_analysis-5063c22660d6daa0 analyze_token_pool_performance --nocapture)",
      "Bash(./target/release/deps/token_pool_benchmark-e250be6a8789399c benchmark_token_pool_performance:*)",
      "Bash(./target/release/deps/token_pool_benchmark-e250be6a8789399c test_optimal_pool_sizing:*)",
      "Bash(./target/release/deps/adaptive_token_pool_test-*)",
      "Bash(test_adaptive_token_pool_performance:*)",
      "Bash(test_rete_network_with_optimal_token_pool --nocapture)",
      "Bash(/dev/null)",
      "Bash(git add:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(ls:*)",
      "Bash(git checkout:*)",
      "mcp__filesystem__search_files",
      "Bash(touch:*)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --all-targets --all-features)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --all-targets --no-default-features)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --all-targets --no-default-features 2 >& 1)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo test --no-default-features)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo check --all-targets --all-features)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo check --all-targets --no-default-features)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo test test_500k_fact_scaling --release --no-default-features)",
      "Bash(echo:*)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo check --release)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo check --release --quiet)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --release --quiet)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh workflow:*)",
      "Bash(gh api:*)",
      "Bash(gh pr create:*)",
      "Bash(gh run watch:*)",
      "Bash(git rm:*)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --workspace --all-targets)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo test --lib --no-run)",
      "Bash(rustup:*)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --workspace --all-targets -- -D warnings)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo test --lib)",
      "Bash(CARGO_TERM_COLOR=always RUSTFLAGS=\"-D warnings\" CARGO_INCREMENTAL=0 cargo clippy --all-targets --all-features -- -D warnings)",
      "Bash(gh pr view:*)",
      "Bash(gh pr comment:*)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo clippy --all-targets --all-features -- -D warnings)",
      "Bash(RUSTFLAGS=\"-D warnings\" cargo check --workspace --all-targets)"
    ],
    "deny": []
  }
}