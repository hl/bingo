name: Performance Tests (Manual Only)

on:
  workflow_dispatch:
    inputs:
      test_scale:
        description: 'Test scale to run'
        type: choice
        options:
          - 'ci-scale'
          - 'full-scale'
          - 'enterprise-scale'
        default: 'ci-scale'
        required: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

# Prevent concurrent performance runs on the same branch
concurrency:
  group: performance-${{ github.ref }}
  cancel-in-progress: true

jobs:
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.88.0"

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-performance-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run CI-scale performance tests
        if: github.event.inputs.test_scale == 'ci-scale'
        run: |
          cargo test --package bingo-core --test scaling_validation_test --release \
            -- --skip test_1m_fact_scaling --skip test_1m_payroll_scenario \
            --skip test_2m_fact_scaling --skip test_2m_enterprise_calculation_rules
        timeout-minutes: 20

      - name: Run full-scale performance tests
        if: github.event.inputs.test_scale == 'full-scale'
        run: |
          cargo test --package bingo-core --test scaling_validation_test --release \
            -- test_1m_fact_scaling test_1m_payroll_scenario
        timeout-minutes: 30

      - name: Run enterprise-scale performance tests
        if: github.event.inputs.test_scale == 'enterprise-scale'
        run: |
          cargo test --package bingo-core --test scaling_validation_test --release \
            -- test_2m_fact_scaling test_2m_enterprise_calculation_rules
        timeout-minutes: 45

      - name: Generate performance report
        run: |
          echo "## Performance Test Results" > performance-report.md
          echo "- Test scale: ${{ github.event.inputs.test_scale }}" >> performance-report.md
          echo "- Completed at: $(date)" >> performance-report.md
          echo "- All performance tests passed successfully" >> performance-report.md

      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report-${{ github.event.inputs.test_scale }}
          path: performance-report.md