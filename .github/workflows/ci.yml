name: CI
# Core CI pipeline - performance and benchmark tests are run locally only

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_category:
        description: 'Test category to run'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - unit
        - integration
        - concurrency
        - validation
        - performance

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  # Fast tests - always run on every commit
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'unit' || github.event.inputs.test_category == 'all'))
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-unit-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run unit tests
      run: cargo test --workspace --lib --bins
      timeout-minutes: 20
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

  # Integration tests - run on every commit
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'integration' || github.event.inputs.test_category == 'all'))
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-integration-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run fast integration tests
      run: |
        # Run specific fast integration tests
        cargo test --test simple_rule_eval_test
        cargo test --test fact_mutation_test
        cargo test --test action_type_handlers_test
        cargo test --test calculator_integration_test
        cargo test --test api_payload_rule_test
        cargo test --test conflict_resolution_test
        cargo test --test cross_fact_matching_test
        cargo test --test end_to_end_integration_test
        cargo test --test formula_action_test
        cargo test --test incremental_processing_test
        cargo test --test rete_direct_test
        cargo test --test rete_network_edge_cases_test
        cargo test --test simplified_api_test
        cargo test --test temporary_rule_eval
        cargo test --test fact_lookup_test
        cargo test --test rule_dependency_integration_test
        cargo test --test session_window_integration_test
        cargo test --test built_in_calculators_test
      timeout-minutes: 25
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

  # API tests - run on every commit
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'integration' || github.event.inputs.test_category == 'all'))
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-api-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run API tests
      run: |
        cargo test --test grpc_compliance_tests
        cargo test --test grpc_payroll_tests
        cargo test --test grpc_tronc_tests
        cargo test --test grpc_wage_cost_tests
      timeout-minutes: 15
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

  # Code quality checks - run on every commit
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"
        components: rustfmt, clippy

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-quality-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --check

    - name: Run clippy
      run: cargo clippy --workspace --all-targets -- -D warnings

    - name: Check compilation
      run: cargo check --workspace --all-targets

  # Concurrency tests - run on main branch pushes only
  concurrency-tests:
    name: Concurrency Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'concurrency' || github.event.inputs.test_category == 'all'))
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-concurrency-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run concurrency tests
      run: |
        cargo test --test comprehensive_concurrency_test --release
        cargo test --test engine_threaded_integration_test --release
        cargo test --test simple_engine_threaded_test --release
        cargo test --test parallel_rete_test --release
        cargo test --test beta_memory_integration_test --release
        cargo test --test lazy_aggregation_integration_test --release
      timeout-minutes: 30
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

  # Validation tests - run on main branch pushes only
  validation-tests:
    name: Validation Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'validation' || github.event.inputs.test_category == 'all'))
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-validation-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run validation tests
      run: |
        # Only run fast validation tests (not performance tests)
        cargo test --test enhanced_monitoring_test --release
        cargo test --test enhanced_test_coverage --release
        cargo test --test rule_optimization_test --release
        cargo test --test beta_network_test --release
        cargo test --test working_memory_test --release
      timeout-minutes: 5
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

  # Performance tests - only run on manual trigger
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.test_category == 'performance' || github.event.inputs.test_category == 'all')
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-performance-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run performance tests
      run: |
        # Run performance and benchmark tests
        cargo test --test true_rete_architecture_validation --release
        cargo test --test rete_algorithm_validation --release
        cargo test --test optimization_validation_test --release
        cargo test --test comprehensive_optimization_summary --release
        # Run ignored performance tests
        cargo test --release -- --ignored
      timeout-minutes: 60


  # Security audit - only on main branch
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

  # Code coverage - only on main branch
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"
        components: llvm-tools-preview

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate code coverage (unit and integration tests only)
      run: |
        # Run coverage only on unit tests and fast integration tests
        cargo llvm-cov --workspace --lcov --output-path lcov.info \
          --lib --bins \
          --ignore-filename-regex '(performance|benchmark|scaling|profiling|debug_|comprehensive_|million_fact|engine_bench|concurrency|threaded|parallel|rete_.*performance|beta_.*performance|alpha_.*performance|validation|monitoring|optimization|component_profiling|bottleneck_analysis)'
      timeout-minutes: 15
      env:
        BINGO_SKIP_SLOW_TESTS: "1"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: lcov.info
        fail_ci_if_error: false

  # Release check - only on main branch
  release-check:
    name: Release Check
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.88.0"

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Verify release build
      run: cargo build --release --verbose

    - name: Run explain command
      run: cargo run --release --bin bingo explain